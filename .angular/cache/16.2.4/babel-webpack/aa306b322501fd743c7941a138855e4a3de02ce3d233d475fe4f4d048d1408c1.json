{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from \"@angular/core\";\nexport let AppComponent = class AppComponent {\n  constructor() {\n    this.serverElements = [{\n      type: \"server\",\n      name: \"Test server\",\n      content: \"Just a Test\"\n    }];\n  }\n  onServerAdded(serverData) {\n    this.serverElements.push({\n      type: \"server\",\n      name: serverData.serverName,\n      content: serverData.serverContent\n    });\n  }\n  onBlueprintAdded(blueprintData) {\n    this.serverElements.push({\n      type: \"blueprint\",\n      name: blueprintData.serverName,\n      content: blueprintData.serverContent\n    });\n  }\n  onChangeFirst() {\n    this.serverElements[0].name = \"Changed!\";\n  }\n  onDestroyFirst() {\n    this.serverElements.splice(0, 1);\n  }\n};\nAppComponent = __decorate([Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})], AppComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}